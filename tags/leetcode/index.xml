<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on funcfun</title>
    <link>https://func.fun/tags/leetcode/</link>
    <description>Recent content in leetcode on funcfun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 22 Jan 2022 01:34:51 +0800</lastBuildDate><atom:link href="https://func.fun/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>977.squares-of-a-sorted-array</title>
      <link>https://func.fun/posts/977.squares-of-a-sorted-array/</link>
      <pubDate>Sat, 22 Jan 2022 01:34:51 +0800</pubDate>
      
      <guid>https://func.fun/posts/977.squares-of-a-sorted-array/</guid>
      <description>Description 力扣 给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。 示例 1： 输入：nums = [-4,-1,0,3,10] 输出：[</description>
    </item>
    
    <item>
      <title>844.backspace-string-compare</title>
      <link>https://func.fun/posts/844.backspace-string-compare/</link>
      <pubDate>Sat, 22 Jan 2022 01:20:29 +0800</pubDate>
      
      <guid>https://func.fun/posts/844.backspace-string-compare/</guid>
      <description>Description 力扣 给定 s 和 t 两个字符串，当它们分别被输入到空白的文本编辑器后，请你判断二者是否相等。# 代表退格字符。 如果相等，返回 true ；否则，返回 false 。 注意</description>
    </item>
    
    <item>
      <title>283.move-zeroes</title>
      <link>https://func.fun/posts/283.move-zeroes/</link>
      <pubDate>Sat, 22 Jan 2022 01:10:08 +0800</pubDate>
      
      <guid>https://func.fun/posts/283.move-zeroes/</guid>
      <description>Description 力扣 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。 示例: 输入: [0,1,0,3,12] 输出: [1,3,12,0,0] 说明: 必须在原数组上操作</description>
    </item>
    
    <item>
      <title>26.remove-duplicates-from-sorted-array</title>
      <link>https://func.fun/posts/26.remove-duplicates-from-sorted-array/</link>
      <pubDate>Fri, 21 Jan 2022 17:40:51 +0800</pubDate>
      
      <guid>https://func.fun/posts/26.remove-duplicates-from-sorted-array/</guid>
      <description>Description 力扣 给你一个有序数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。 不要使用额外的数组空间，你必须在 原地 修改</description>
    </item>
    
    <item>
      <title>27.remove-element</title>
      <link>https://func.fun/posts/27.remove-element/</link>
      <pubDate>Fri, 21 Jan 2022 16:18:51 +0800</pubDate>
      
      <guid>https://func.fun/posts/27.remove-element/</guid>
      <description>Description 力扣 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。 不要使用额外的数组空间，你必须仅使用 O(1) 额外</description>
    </item>
    
    <item>
      <title>34.find-first-and-last-position-of-element-in-sorted-array</title>
      <link>https://func.fun/posts/34.find-first-and-last-position-of-element-in-sorted-array/</link>
      <pubDate>Fri, 21 Jan 2022 13:25:31 +0800</pubDate>
      
      <guid>https://func.fun/posts/34.find-first-and-last-position-of-element-in-sorted-array/</guid>
      <description>Description 力扣 给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。 如果数组中不存在目标值 t</description>
    </item>
    
    <item>
      <title>35.search-insert-position</title>
      <link>https://func.fun/posts/35.search-insert-position/</link>
      <pubDate>Thu, 06 Jan 2022 12:53:31 +0800</pubDate>
      
      <guid>https://func.fun/posts/35.search-insert-position/</guid>
      <description>Description 力扣 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 请必须使用时间</description>
    </item>
    
    <item>
      <title>704.binary-search</title>
      <link>https://func.fun/posts/704.binary-search/</link>
      <pubDate>Wed, 08 Dec 2021 12:25:36 +0800</pubDate>
      
      <guid>https://func.fun/posts/704.binary-search/</guid>
      <description>Description 力扣 给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。 示例 1:</description>
    </item>
    
  </channel>
</rss>
